#!/usr/bin/env python

'''bcfg2-repo-validate checks all xml files in Bcfg2 repos against their respective XML schemas'''
__revision__ = '$Revision$'

import glob, lxml.etree, os, sys, ConfigParser
from Bcfg2.Settings import settings

if __name__ == '__main__':
    verbose = False
    if '-v' in sys.argv:
        verbose = True
        sys.argv.remove('-v')
    # override default settings
    if '-C' in sys.argv:
        settings.read_config_file(sys.argv[sys.argv.index('-C') + 1])

    schemadir = "%s/share/bcfg2/schemas" % (settings.SERVER_PREFIX)
    try:
        os.chdir(schemadir)
    except:
        print "Failed to change to schema dir '%s'" % schemadir
        raise SystemExit(1)

    filesets = {'metadata':("%s/Metadata/groups.xml", "%s/metadata.xsd"),
                'clients':("%s/Metadata/clients.xml", "%s/clients.xsd"),
                'bundle':("%s/Bundler/*.xml", "%s/bundle.xsd"),
                'pkglist':("%s/Pkgmgr/*.xml", "%s/pkglist.xsd"),
                'base':("%s/Base/*.xml", "%s/base.xsd"),
                'rules':("%s/Rules/*.xml", "%s/rules.xsd"),
                'imageinfo':("%s/etc/report-configuration.xml", "%s/report-configuration.xsd"),
                'services':("%s/Svcmgr/*.xml", "%s/services.xsd"),
                'deps':("%s/Deps/*.xml", "%s/deps.xsd")}

    failures  = 0
    for k, (spec, schemaname) in filesets.iteritems():
        try:
            schema = lxml.etree.XMLSchema(lxml.etree.parse(open(schemaname%(schemadir))))
        except:
            print "Failed to process schema %s" % (schemaname%(schemadir))
            failures = 1
            continue
        for filename in glob.glob(spec%(settings.SERVER_REPOSITORY)):
            try:
                datafile = lxml.etree.parse(open(filename))
            except SyntaxError:
                print "%s ***FAILS*** to parse \t\t<----" % (filename)
                os.system("xmllint %s" % filename)
                failures = 1
                continue
            except IOError:
                print "Failed to open file %s \t\t<---" % (filename)
                failures = 1
                continue
            if schema.validate(datafile):
                if verbose:
                    print "%s checks out" % (filename)
            else:
                rc = os.system("xmllint --noout --xinclude --schema %s %s > /dev/null 2>/dev/null" % \
                               (schemaname % schemadir, filename))
                if rc:
                    failures = 1
                    print "%s ***FAILS*** to verify \t\t<----" % (filename)
                    os.system("xmllint --noout --xinclude --schema %s %s" % \
                              (schemaname % schemadir, filename))
                elif verbose:
                    print "%s checks out" % (filename)
    raise SystemExit, failures
